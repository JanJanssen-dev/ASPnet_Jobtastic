<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Jobtastic</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/ASPnet_Jobtastic.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" integrity="sha512-..." crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>

<body>
    <div class="fluid-background">
        <canvas id="fluidCanvas"></canvas>
    </div>

    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light mb-0">
            <div class="container-fluid">
                <!-- Links: Nur der Toggle-Button im Menü-Style -->
                <div class="navbar-nav left-menu mb-3">
                    <!-- Logo in Button einbetten,linkes Menü -->
                    <div class="nav-item">
                        <button class="logo-btn" onclick="window.location.href='@Url.Action("Index", "Home", new { area = "" })'">
                            <img src="~/images/JobtasticBannerNEW.png" alt="Jobtastic Logo" style="max-height: 45px; max-width: 100%; object-fit: contain;" />
                        </button>
                    </div>
                    <!-- Fluid-Effekt Toggle-Button -->
                    @* <div class="nav-item">
                        <button id="toggleFluidEffect" class="fluid-toggle-btn" aria-label="Flüssigkeitseffekt umschalten">
                            <i class="fas fa-water"></i>
                        </button>
                    </div> *@
                    <div class="nav-item">
                        <label class="toggle-switch" for="toggleFluidEffect" title="Flüssigkeitseffekt umschalten">
                            <input type="checkbox" id="toggleFluidEffect" checked>
                            <span class="toggle-slider">
                                <i class="fas fa-water toggle-icon"></i>
                            </span>
                            <span class="toggle-label">Effekt</span>
                        </label>
                    </div>
                </div>

                <!-- rechter Bereich -->
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-end mb-3">
                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="footer text-muted w-100">
        <div class="container-fluid footer-container">
            &copy; 2025 - Jobtastic - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>

    @if (TempData["ErrorMessage"] != null)
    {
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                Swal.fire({
                    title: 'Zugriff verweigert',
                    text: '@TempData["ErrorMessage"]',
                    icon: 'error',
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'OK'
                });
            });
        </script>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                Swal.fire({
                    title: 'Erfolg',
                    text: '@Html.Raw(TempData["SuccessMessage"])',
                    icon: 'success',
                    timer: 2000,
                    showConfirmButton: false
                });
            });
        </script>
    }

    @if (TempData.ContainsKey("SweetAlert"))
    {
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                var alertData = @Html.Raw(Json.Serialize(TempData["SweetAlert"]));
                Swal.fire({
                    title: alertData.title,
                    text: alertData.text,
                    icon: alertData.icon,
                    position: "top-end",
                    timer: 2000,
                    showConfirmButton: false,
                    toast: true
                });
            });
        </script>
    }

    @await RenderSectionAsync("Scripts", required: false)

    <!-- Behalte das dynamische Script-Laden bei -->
    <script type="text/javascript">
        function loadFluidScript() {
            // Check if the screen width is greater than 960px
            if (screen.width > 960) {
                // Dynamically add the fluid animation script to the
                const head = document.getElementsByTagName('head')[0];
                const script = document.createElement('script');
                script.type = 'text/javascript';
                script.src = '/js/script.js';
                head.appendChild(script);
                console.log("Running fluid animation script");

                // Adjust the canvas size after the script is loaded
                setTimeout(() => {
                    const canvas = document.getElementById("fluidCanvas");
                    if (canvas) {
                        // Override the inline attributes for width and height
                        canvas.removeAttribute("width");
                        canvas.removeAttribute("height");

                        // Apply custom width and height via JavaScript
                        canvas.width = window.innerWidth; // Set the canvas width to the window width
                        canvas.height = window.innerHeight; // Set the canvas height to the window height
                        canvas.style.width = "100%"; // Ensure canvas takes full width of its container
                        canvas.style.height = "auto"; // Maintain aspect ratio to prevent vertical overflow
                        console.log("Canvas dimensions successfully adjusted");
                    }
                }, 1000); // Wait 1 second to ensure the fluid script is fully loaded before adjustments
            }
        }

        // Load the function when the DOM is fully loaded
        document.addEventListener('DOMContentLoaded', loadFluidScript);
    </script>

    <script type="text/javascript">
                document.addEventListener('DOMContentLoaded', function() {
            // Fluid-Status aus dem localStorage abrufen (falls vorhanden)
            const fluidEnabled = localStorage.getItem('fluidEnabled') !== 'false'; // Default: true

            // Toggle-Checkbox und Hintergrund finden
            const toggleCheckbox = document.getElementById('toggleFluidEffect');
            const fluidBackground = document.querySelector('.fluid-background');

            // Initialen Status setzen
            toggleCheckbox.checked = fluidEnabled;
            updateFluidState(fluidEnabled);

            // Event-Listener für die Checkbox
            toggleCheckbox.addEventListener('change', function() {
                // Status basierend auf Checkbox-Status aktualisieren
                updateFluidState(this.checked);

                // Status im localStorage speichern
                localStorage.setItem('fluidEnabled', this.checked);
            });

            // Funktion zum Aktualisieren des visuellen Status
            function updateFluidState(enabled) {
                if (enabled) {
                    // Fluid-Effekt aktivieren
                    fluidBackground.style.display = '';
                    loadFluidScript(); // Bestehendes Script neu laden
                } else {
                    // Fluid-Effekt deaktivieren
                    fluidBackground.style.display = 'none';
                }
            }
        });
    </script>
</body>
</html>